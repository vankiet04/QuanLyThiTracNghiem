
package GUI.Menu;

import BUS.BUS_User;
import DTO.DTO_User;
//import GUI.CRUD.SuaTaiKhoan;
import GUI.CRUD.ThemTaiKhoan;
import java.io.*;
import java.util.ArrayList;
import java.util.List;
import javax.swing.*;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import static org.apache.poi.hssf.usermodel.HeaderFooter.file;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

public class QuanLyTaiKhoan extends javax.swing.JPanel {

    private BUS_User busTK = new BUS_User();
    private ArrayList<DTO_User> listTK = busTK.getAllData();
    private DefaultTableModel modelTK;
    private int curSelect=-1;
    
    public QuanLyTaiKhoan() {
        initComponents();
        loadData(listTK);
        tableTaiKhoan.setDefaultEditor(Object.class, null);
        
        // bắt dòng được chọn
        tableTaiKhoan.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
            @Override
            public void valueChanged(ListSelectionEvent e) {
                // thêm sự kiện lấy id dc chọn
                if( !e.getValueIsAdjusting()){
                    int selectRow = tableTaiKhoan.getSelectedRow();
                    if (selectRow != -1)
                        curSelect =Integer.parseInt(tableTaiKhoan.getValueAt(selectRow, 0).toString());
                }
            }
        
        
        });
        
        
    }
    
    public void loadData(ArrayList<DTO_User> listCur){
        listTK = listCur;
        modelTK = (DefaultTableModel) tableTaiKhoan.getModel();
        modelTK.setRowCount(0);
        
        for(DTO_User cur : listCur)
                modelTK.addRow(new Object[]{cur.getUserID(), cur.getFullName(), cur.getUserName(), cur.getPass(), cur.getEmail()});
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);

        for (int i = 0; i < modelTK.getColumnCount(); i++)
            tableTaiKhoan.getColumnModel().getColumn(i).setCellRenderer(centerRenderer); 
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlQLTK = new javax.swing.JPanel();
        pnlNav = new javax.swing.JPanel();
        btnThem = new javax.swing.JLabel();
        btnXoa = new javax.swing.JLabel();
        lblThem = new javax.swing.JLabel();
        lblSua = new javax.swing.JLabel();
        lblXoa = new javax.swing.JLabel();
        btnExcel = new javax.swing.JLabel();
        btnSua = new javax.swing.JLabel();
        lblXoa1 = new javax.swing.JLabel();
        pnlSearch = new javax.swing.JPanel();
        txtSearch = new com.raven.suportSwing.TextField();
        btnReset = new com.raven.suportSwing.MyButton();
        lblSearch = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableTaiKhoan = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));
        setForeground(new java.awt.Color(0, 0, 0));
        setPreferredSize(new java.awt.Dimension(1744, 738));

        pnlNav.setBackground(new java.awt.Color(255, 255, 255));

        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8-add-75.png"))); // NOI18N
        btnThem.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnThem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnThemMousePressed(evt);
            }
        });

        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8-delete-85.png"))); // NOI18N
        btnXoa.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnXoa.setEnabled(false);
        btnXoa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnXoaMousePressed(evt);
            }
        });

        lblThem.setText("Thêm");
        lblThem.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        lblSua.setText("Sửa");
        lblSua.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        lblXoa.setText("Xóa");
        lblXoa.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        btnExcel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8-export-excel-75.png"))); // NOI18N
        btnExcel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnExcel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnExcelMousePressed(evt);
            }
        });

        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8-edit-75.png"))); // NOI18N
        btnSua.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSua.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnSuaMousePressed(evt);
            }
        });

        lblXoa1.setText("Import");
        lblXoa1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout pnlNavLayout = new javax.swing.GroupLayout(pnlNav);
        pnlNav.setLayout(pnlNavLayout);
        pnlNavLayout.setHorizontalGroup(
            pnlNavLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlNavLayout.createSequentialGroup()
                .addGroup(pnlNavLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlNavLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnThem))
                    .addGroup(pnlNavLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(lblThem)))
                .addGroup(pnlNavLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlNavLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnXoa))
                    .addGroup(pnlNavLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(lblSua)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblXoa)
                        .addGap(27, 27, 27)))
                .addGroup(pnlNavLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnExcel)
                    .addGroup(pnlNavLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(lblXoa1)))
                .addContainerGap(56, Short.MAX_VALUE))
        );
        pnlNavLayout.setVerticalGroup(
            pnlNavLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlNavLayout.createSequentialGroup()
                .addComponent(btnSua, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblSua)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(pnlNavLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlNavLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btnThem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlNavLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblXoa)
                    .addComponent(lblThem))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlNavLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnExcel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblXoa1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13))
        );

        pnlSearch.setBackground(new java.awt.Color(255, 255, 255));

        txtSearch.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtSearch.setLabelText("Tìm theo fullname/username");

        btnReset.setBackground(new java.awt.Color(204, 255, 255));
        btnReset.setText("Reset");
        btnReset.setBorderColor(new java.awt.Color(153, 255, 255));
        btnReset.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnReset.setRadius(20);
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        lblSearch.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        lblSearch.setForeground(new java.awt.Color(255, 51, 0));

        javax.swing.GroupLayout pnlSearchLayout = new javax.swing.GroupLayout(pnlSearch);
        pnlSearch.setLayout(pnlSearchLayout);
        pnlSearchLayout.setHorizontalGroup(
            pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSearchLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlSearchLayout.createSequentialGroup()
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(1380, Short.MAX_VALUE))
        );
        pnlSearchLayout.setVerticalGroup(
            pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSearchLayout.createSequentialGroup()
                .addContainerGap(57, Short.MAX_VALUE)
                .addGroup(pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(759, Short.MAX_VALUE))
        );

        tableTaiKhoan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Mã", "Tên người dùng", "Tài khoản", "Mật khẩu", "Email"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableTaiKhoan.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jScrollPane1.setViewportView(tableTaiKhoan);

        javax.swing.GroupLayout pnlQLTKLayout = new javax.swing.GroupLayout(pnlQLTK);
        pnlQLTK.setLayout(pnlQLTKLayout);
        pnlQLTKLayout.setHorizontalGroup(
            pnlQLTKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1744, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlQLTKLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnlNav, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(pnlQLTKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlQLTKLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(pnlSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        pnlQLTKLayout.setVerticalGroup(
            pnlQLTKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlQLTKLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(pnlNav, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 748, Short.MAX_VALUE))
            .addGroup(pnlQLTKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlQLTKLayout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlQLTK, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlQLTK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSuaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSuaMousePressed
        if ( curSelect == -1){
            JOptionPane.showMessageDialog(null, "Vui lòng chọn tài khoản để chỉnh sửa", "Cảnh báo!", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if ( curSelect == 1){
            JOptionPane.showMessageDialog(null, "Không thể chỉnh sửa tài khoản admin", "Cảnh báo!", JOptionPane.WARNING_MESSAGE);
            return;
        }
//        SuaTaiKhoan dialog = new SuaTaiKhoan(curSelect, this);
//        dialog.setVisible(true);
    }//GEN-LAST:event_btnSuaMousePressed

    private void btnXoaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnXoaMousePressed
        //        if ( curSelect == -1){
            //            JOptionPane.showMessageDialog(null, "Chưa chọn tài khoản để xóa", "Cảnh báo!", JOptionPane.WARNING_MESSAGE);
            //            return;
            //        }
        //        if ( curSelect == 1){
            //            JOptionPane.showMessageDialog(null, "Không thể xóa tài khoản admin", "Cảnh báo!", JOptionPane.WARNING_MESSAGE);
            //            return;
            //        }
        //        int res = JOptionPane.showConfirmDialog(null, "Bạn có chắc chắn xóa tài khoản này?", "Xác nhận", JOptionPane.YES_NO_OPTION);
        //        if (res == JOptionPane.YES_OPTION) {
            //            busTK.delete(busTK.getInfoByID(curSelect));
            //            JOptionPane.showMessageDialog(null, "Xóa tài khoản thành công");
            //            loadData(busTK.getAllData());
            //        }
    }//GEN-LAST:event_btnXoaMousePressed

    private void btnThemMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnThemMousePressed
        // TODO add your handling code here:
        ThemTaiKhoan dialog = new ThemTaiKhoan(this);
        dialog.setVisible(true);
    }//GEN-LAST:event_btnThemMousePressed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        txtSearch.setText("");
        lblSearch.setText("");
        loadData(busTK.getAllData());
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnExcelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnExcelMousePressed
//        JFileChooser fileChooser = new JFileChooser();
//        int returnValue = fileChooser.showOpenDialog(this);
//
//        if (returnValue == JFileChooser.APPROVE_OPTION) {
//            File selectedFile = fileChooser.getSelectedFile();
//            List<DTO_User> users = ImportExcel(selectedFile);
//            for (DTO_User user : users)
//                busTK.insert(user);
//
//            JOptionPane.showMessageDialog(this, "Thêm " + users.size() + " user thành công!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
//            loadData(busTK.getAllData());
//        }
        
    }//GEN-LAST:event_btnExcelMousePressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btnExcel;
    private com.raven.suportSwing.MyButton btnReset;
    private javax.swing.JLabel btnSua;
    private javax.swing.JLabel btnThem;
    private javax.swing.JLabel btnXoa;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblSearch;
    private javax.swing.JLabel lblSua;
    private javax.swing.JLabel lblThem;
    private javax.swing.JLabel lblXoa;
    private javax.swing.JLabel lblXoa1;
    private javax.swing.JPanel pnlNav;
    private javax.swing.JPanel pnlQLTK;
    private javax.swing.JPanel pnlSearch;
    private javax.swing.JTable tableTaiKhoan;
    private com.raven.suportSwing.TextField txtSearch;
    // End of variables declaration//GEN-END:variables

//    private List<DTO_User> ImportExcel(File selectedFile) {
//        List<DTO_User> userList = new ArrayList<>();
//            try (FileInputStream fis = new FileInputStream(selectedFile);
//                Workbook workbook = new XSSFWorkbook(fis)) { // Đọc file .xlsx
//                    Sheet sheet = workbook.getSheetAt(0); // Lấy sheet đầu tiên
//
//                    for (int i = 0; i <= sheet.getLastRowNum(); i++) {
//                        Row row = sheet.getRow(i);
//                        if (row == null) continue;
//
//                        // Đọc dữ liệu từ từng cột
//                        String fullName = CheckString(row.getCell(0));
//                        String userName = CheckString(row.getCell(1));
//                        String pass = CheckString(row.getCell(2));
//                        String email = CheckString(row.getCell(3));
//                        boolean isAdmin = Boolean.valueOf(CheckString(row.getCell(4)));
//                        // Tạo đối tượng DTO_User và thêm vào danh sách
//                        DTO_User user = new DTO_User(userName, pass, email, fullName, isAdmin);
//                        userList.add(user);
//                    }
//                } catch (Exception e) {
//                    JOptionPane.showMessageDialog(null, "Lỗi khi đọc file Excel: " + e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
//                }
//                return userList;
//    }
//    
//    private String CheckString(Cell cell){
//        if( cell == null) return "";
//        switch (cell.getCellType()) {
//            case STRING:
//                return cell.getStringCellValue().trim();
//            case NUMERIC:
//                return String.valueOf((long) cell.getNumericCellValue()); // Chuyển số thành chuỗi (loại bỏ phần thập phân)
//            case BOOLEAN:
//                return String.valueOf(cell.getBooleanCellValue()); // "true" hoặc "false"
//            default:
//                return "";
//        }
//    }
}
